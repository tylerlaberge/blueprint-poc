@use '../../variables';

.blueprint {
    display: inline-flex;
    flex-direction: column;
    justify-content: flex-end;
    min-width: 15em;
    border-radius: 15px;
    border: 3px solid variables.$primary;
    background-color: rgba(variables.$primary, 0.25);
    transition: background-color .1s linear;
    &.locked {
        background-color: rgba(variables.$background, 0.25);
    }
    font-family: Arial, Helvetica, sans-serif;
    box-shadow: rgba(black, 0.35) 0px 5px 15px;
    cursor: grab;

    .header {
        display: flex;
        margin: 0;
        padding: 0.5em;
        border-top-left-radius: 12px;
        border-top-right-radius: 12px;
        color: variables.$text-primary;
        background-color: rgba(variables.$primary, 0.5);
        transition: background-color .1s linear;
        &.locked {
            background-color: rgba(variables.$background, 0.5);
        }

        .title {
            flex: 3;
            text-align: end;
            font-size: 1em;
        }
    
        .lock-button {
            flex: 1;
            text-align: right;
            align-self: center;
            transition: color .1s linear;
            &.open {
                color: rgba(variables.$background, 0.75);
                &:hover {
                    color: rgba(variables.$background, 1);
                    cursor: pointer;
                }
            }
            &.closed {
                color: rgba(variables.$primary, 0.5);
                &:hover {
                    color: variables.$primary;
                    cursor: pointer;
                }
            }
            mat-icon {
                font-size: 1.5em !important;
                line-height: 1.5em;
            }
        }
    }

    hr {
        width: 100%;
        border-color: variables.$primary;
        margin-top: 0;
        margin-bottom: 0.5em;
    }

    .contract {
        flex: 1;
        display: flex;
        .inputs {
            flex: 1;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            margin-right: 0.25em;
            .add-port {
                margin-left: 0.5em;
                color: variables.$input;
                &.locked {
                    color: gray;
                }
            }
            .port {
                margin-left: .65em;
                background-color: rgba(variables.$input, 0.15);
                border: 2px solid variables.$input;
                &:hover {
                    background-color: rgba(variables.$input, 0.25);
                }
            }
            .delete-port {
                margin-left: 0.25em;
            }
        }
        .outputs {
            flex: 1;
            display: flex;
            flex-direction: column;
            align-items: flex-end;
            margin-left: 0.25em;
            .add-port {
                margin-right: 0.5em;
                color: variables.$output;
                &.locked {
                    color: gray;
                }
            }
            .port {
                order: 1;
                margin-right: .65em;
                background-color: rgba(variables.$output, 0.15);
                border: 2px solid variables.$output;
                &:hover {
                    background-color: rgba(variables.$output, 0.25);
                }
            }
            .delete-port {
                margin-right: 0.25em;
            }
        }

        .add-port {
            transition: color .1s linear;
            &:not(.locked):hover {
                cursor: pointer;
                color: variables.$text-primary !important;
            }            
        }

        .port-container {
            display: flex;
            margin-bottom: 0.5em;
            .port {
                display: inline-block;
                width: 1em;
                height: 1em;
                border-radius: 50%;
                transition: background-color .1s linear;
            }
            .delete-port {
                display: flex;
                align-items: center;
                color: rgba(variables.$text-primary, 0.5);
                transition: color .1s linear;
                &:hover {
                    color: variables.$text-primary;
                }
                mat-icon {
                    font-size: 1em;
                    height: 1em;
                    width: 1em;
                }
            }
        }
    }

    &.mouse-down {
        cursor: grabbing;
    }
}